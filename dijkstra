#include <stdio.h>

void dijkstra(int g[50][50], int n, int source) {
    int cost[50][50], dist[50], pred[50], visited[50]; 
    int i, j, count, mindist, nextnode;
    
    
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (g[i][j] == 0) {
                cost[i][j] = 999; 
            } else {
                cost[i][j] = g[i][j];
            }
        }
    }

    
    for (i = 0; i < n; i++) {
        dist[i] = cost[source][i];
        pred[i] = source;
        visited[i] = 0;
    }

    visited[source] = 1;
    dist[source] = 0;
    count = 1;

    while (count < n - 1) { 
        mindist = 999;
        for (i = 0; i < n; i++) {
            if (dist[i] < mindist && !visited[i]) {
                mindist = dist[i];
                nextnode = i;
            }
        }

        visited[nextnode] = 1;

        for (i = 0; i < n; i++) { 
            if (!visited[i]) {
                if (mindist + cost[nextnode][i] < dist[i]) {
                    dist[i] = mindist + cost[nextnode][i];
                    pred[i] = nextnode;
                }
            }
        }

        count++;
    }

    printf("\nShortest distances from source %d:\n", source);
    for (i = 0; i < n; i++) {
        if (i != source) {
            printf("Distance from %d to %d: %d\n", source, i, dist[i]);
        }
    }
}

int main() {
    int n, i, j;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    int arr[50][50];
    for (i = 0; i < n; i++) { 
        for (j = 0; j < n; j++) {
            printf("Enter value at index [%d][%d]: ", i, j);
            scanf("%d", &arr[i][j]);
        }
    }
    int source;
    printf("Enter the source node: ");
    scanf("%d", &source);
    dijkstra(arr, n, source);
    return 0;
}
