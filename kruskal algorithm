#include<stdio.h>
#define MAX 999

int parent[100], cost[100][100];

int find(int i){
    while(parent[i]){
        i=parent[i];
    }
    return i;
}

int uni(int i,int j){
    if(i!=j){
        return 1;
    }
    return 0;
}

void kruskal(int n){
    int mincost=0,ne=0,a,b,u,v,i,j;
    printf("Edges are:\n");
    
    while(ne<n-1){
        int min=MAX;
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                if(cost[i][j]<min){
                    min=cost[i][j];
                    a=u=i;
                    b=v=j;
                }
            }
        }
        u=find(u);
        v=find(v);
        if(uni(u,v)){
            printf("%d <--> %d : %d\n", a,b,min);
            mincost+=min;
            ne++;
            parent[v]=u;
        }
        cost[a][b]=cost[b][a]=MAX;
    }
    printf("Minimum cost: %d\n",mincost);
}

char main(){
    int n,i,j;
    printf("Enter number of edges: ");
    scanf("%d",&n);
    printf("Enter cost of matrix:\n");
    for( i=1;i<=n;i++){
        for( j=1;j<=n;j++){
            printf("Enter cost from vertex %d to %d: ",i,j);
            scanf("%d",&cost[i][j]);
        }
    }
    kruskal(n);
    return 'c';
}
